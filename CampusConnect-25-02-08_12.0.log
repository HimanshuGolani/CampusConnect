12:26:51.019 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final 
12:26:51.102 [main] INFO  c.c.C.CampusConnectApplication - Starting CampusConnectApplication using Java 21.0.5 with PID 27252 (D:\CampusConnect\target\classes started by Himasnhu Golani in D:\CampusConnect) 
12:26:51.102 [main] DEBUG c.c.C.CampusConnectApplication - Running with Spring Boot v3.3.4, Spring v6.1.13 
12:26:51.102 [main] INFO  c.c.C.CampusConnectApplication - No active profile set, falling back to 1 default profile: "default" 
12:26:51.868 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode 
12:26:51.868 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode. 
12:26:52.003 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 118 ms. Found 9 MongoDB repository interfaces. 
12:26:52.011 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode 
12:26:52.018 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode. 
12:26:52.030 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.campusconnect.CampusConnect.repositories.ChatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository 
12:26:52.030 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.campusconnect.CampusConnect.repositories.CompanyRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository 
12:26:52.031 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.campusconnect.CampusConnect.repositories.ConfigCampusConnectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository 
12:26:52.031 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.campusconnect.CampusConnect.repositories.FileRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository 
12:26:52.031 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.campusconnect.CampusConnect.repositories.FolderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository 
12:26:52.031 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.campusconnect.CampusConnect.repositories.MessageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository 
12:26:52.031 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.campusconnect.CampusConnect.repositories.PostRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository 
12:26:52.031 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.campusconnect.CampusConnect.repositories.UniversityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository 
12:26:52.031 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.campusconnect.CampusConnect.repositories.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository 
12:26:52.031 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces. 
12:26:52.623 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http) 
12:26:52.627 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"] 
12:26:52.640 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat] 
12:26:52.642 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.30] 
12:26:52.698 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext 
12:26:52.698 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1541 ms 
12:26:52.955 [main] INFO  org.mongodb.driver.client - MongoClient with metadata {"application": {"name": "CampusConnect"}, "driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/21.0.5+9-LTS-239"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=majority, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='campusconnectteamcommon', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@47fb7ec9, com.mongodb.Jep395RecordCodecProvider@2f8c4fae, com.mongodb.KotlinCodecProvider@4703c998]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=campusconnect.d2vm8.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-z84o76-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='CampusConnect', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null} 
12:26:52.994 [cluster-ClusterId{value='67a70034404426766c189498', description='CampusConnect'}-srv-campusconnect.d2vm8.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server campusconnect-shard-00-01.d2vm8.mongodb.net:27017 to client view of cluster 
12:26:53.027 [cluster-ClusterId{value='67a70034404426766c189498', description='CampusConnect'}-srv-campusconnect.d2vm8.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server campusconnect-shard-00-02.d2vm8.mongodb.net:27017 to client view of cluster 
12:26:53.029 [cluster-ClusterId{value='67a70034404426766c189498', description='CampusConnect'}-srv-campusconnect.d2vm8.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server campusconnect-shard-00-00.d2vm8.mongodb.net:27017 to client view of cluster 
12:26:53.411 [main] INFO  org.mongodb.driver.cluster - Waiting for server to become available for operation with ID 7. Remaining time: 30000 ms. Selector: WritableServerSelector, topology description: {type=REPLICA_SET, servers=[{address=campusconnect-shard-00-01.d2vm8.mongodb.net:27017, type=UNKNOWN, state=CONNECTING}, {address=campusconnect-shard-00-02.d2vm8.mongodb.net:27017, type=UNKNOWN, state=CONNECTING}, {address=campusconnect-shard-00-00.d2vm8.mongodb.net:27017, type=UNKNOWN, state=CONNECTING}]. 
12:26:53.560 [cluster-ClusterId{value='67a70034404426766c189498', description='CampusConnect'}-campusconnect-shard-00-01.d2vm8.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=campusconnect-shard-00-01.d2vm8.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=340627400, setName='atlas-z84o76-shard-0', canonicalAddress=campusconnect-shard-00-01.d2vm8.mongodb.net:27017, hosts=[campusconnect-shard-00-00.d2vm8.mongodb.net:27017, campusconnect-shard-00-01.d2vm8.mongodb.net:27017, campusconnect-shard-00-02.d2vm8.mongodb.net:27017], passives=[], arbiters=[], primary='campusconnect-shard-00-01.d2vm8.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='aps1-az3'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTH_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff00000000000000c2, setVersion=226, topologyVersion=TopologyVersion{processId=67a0cb31d51fad5b42c93544, counter=9}, lastWriteDate=Sat Feb 08 12:27:07 IST 2025, lastUpdateTimeNanos=9541352796000} 
12:26:53.560 [cluster-ClusterId{value='67a70034404426766c189498', description='CampusConnect'}-campusconnect-shard-00-00.d2vm8.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=campusconnect-shard-00-00.d2vm8.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=340626900, setName='atlas-z84o76-shard-0', canonicalAddress=campusconnect-shard-00-00.d2vm8.mongodb.net:27017, hosts=[campusconnect-shard-00-00.d2vm8.mongodb.net:27017, campusconnect-shard-00-01.d2vm8.mongodb.net:27017, campusconnect-shard-00-02.d2vm8.mongodb.net:27017], passives=[], arbiters=[], primary='campusconnect-shard-00-01.d2vm8.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='aps1-az1'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTH_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=226, topologyVersion=TopologyVersion{processId=67a0cc1f021fd66dfc94a303, counter=5}, lastWriteDate=Sat Feb 08 12:27:07 IST 2025, lastUpdateTimeNanos=9541352796000} 
12:26:53.560 [cluster-ClusterId{value='67a70034404426766c189498', description='CampusConnect'}-campusconnect-shard-00-02.d2vm8.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=campusconnect-shard-00-02.d2vm8.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=340597700, setName='atlas-z84o76-shard-0', canonicalAddress=campusconnect-shard-00-02.d2vm8.mongodb.net:27017, hosts=[campusconnect-shard-00-00.d2vm8.mongodb.net:27017, campusconnect-shard-00-01.d2vm8.mongodb.net:27017, campusconnect-shard-00-02.d2vm8.mongodb.net:27017], passives=[], arbiters=[], primary='campusconnect-shard-00-01.d2vm8.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='aps1-az2'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTH_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=226, topologyVersion=TopologyVersion{processId=67a0cd6d22e8531d857b0502, counter=5}, lastWriteDate=Sat Feb 08 12:27:07 IST 2025, lastUpdateTimeNanos=9541352796000} 
12:26:53.563 [cluster-ClusterId{value='67a70034404426766c189498', description='CampusConnect'}-campusconnect-shard-00-01.d2vm8.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Discovered replica set primary campusconnect-shard-00-01.d2vm8.mongodb.net:27017 with max election id 7fffffff00000000000000c2 and max set version 226 
12:26:54.592 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService 
12:26:55.261 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"] 
12:26:55.276 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/' 
12:26:55.286 [main] INFO  c.c.C.CampusConnectApplication - Started CampusConnectApplication in 4.561 seconds (process running for 5.044) 
12:26:59.522 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet' 
12:26:59.522 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet' 
12:26:59.522 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms 
12:43:51.655 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final 
12:43:51.707 [main] INFO  c.c.C.CampusConnectApplication - Starting CampusConnectApplication using Java 21.0.5 with PID 27016 (D:\CampusConnect\target\classes started by Himasnhu Golani in D:\CampusConnect) 
12:43:51.707 [main] DEBUG c.c.C.CampusConnectApplication - Running with Spring Boot v3.3.4, Spring v6.1.13 
12:43:51.707 [main] INFO  c.c.C.CampusConnectApplication - No active profile set, falling back to 1 default profile: "default" 
12:43:52.463 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode 
12:43:52.467 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode. 
12:43:52.589 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 119 ms. Found 9 MongoDB repository interfaces. 
12:43:52.602 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode 
12:43:52.605 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode. 
12:43:52.616 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.campusconnect.CampusConnect.repositories.ChatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository 
12:43:52.616 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.campusconnect.CampusConnect.repositories.CompanyRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository 
12:43:52.616 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.campusconnect.CampusConnect.repositories.ConfigCampusConnectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository 
12:43:52.616 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.campusconnect.CampusConnect.repositories.FileRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository 
12:43:52.616 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.campusconnect.CampusConnect.repositories.FolderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository 
12:43:52.616 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.campusconnect.CampusConnect.repositories.MessageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository 
12:43:52.616 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.campusconnect.CampusConnect.repositories.PostRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository 
12:43:52.616 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.campusconnect.CampusConnect.repositories.UniversityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository 
12:43:52.620 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.campusconnect.CampusConnect.repositories.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository 
12:43:52.620 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces. 
12:43:53.189 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http) 
12:43:53.197 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"] 
12:43:53.202 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat] 
12:43:53.202 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.30] 
12:43:53.260 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext 
12:43:53.260 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1514 ms 
12:43:53.562 [main] INFO  org.mongodb.driver.client - MongoClient with metadata {"application": {"name": "CampusConnect"}, "driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/21.0.5+9-LTS-239"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=majority, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='campusconnectteamcommon', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@3be3e76c, com.mongodb.Jep395RecordCodecProvider@6c07ad6b, com.mongodb.KotlinCodecProvider@10ed037a]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=campusconnect.d2vm8.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-z84o76-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='CampusConnect', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null} 
12:43:53.601 [cluster-ClusterId{value='67a704314f1c8a53da48dabc', description='CampusConnect'}-srv-campusconnect.d2vm8.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server campusconnect-shard-00-01.d2vm8.mongodb.net:27017 to client view of cluster 
12:43:53.632 [cluster-ClusterId{value='67a704314f1c8a53da48dabc', description='CampusConnect'}-srv-campusconnect.d2vm8.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server campusconnect-shard-00-02.d2vm8.mongodb.net:27017 to client view of cluster 
12:43:53.634 [cluster-ClusterId{value='67a704314f1c8a53da48dabc', description='CampusConnect'}-srv-campusconnect.d2vm8.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server campusconnect-shard-00-00.d2vm8.mongodb.net:27017 to client view of cluster 
12:43:54.001 [main] INFO  org.mongodb.driver.cluster - Waiting for server to become available for operation with ID 7. Remaining time: 30000 ms. Selector: WritableServerSelector, topology description: {type=REPLICA_SET, servers=[{address=campusconnect-shard-00-01.d2vm8.mongodb.net:27017, type=UNKNOWN, state=CONNECTING}, {address=campusconnect-shard-00-02.d2vm8.mongodb.net:27017, type=UNKNOWN, state=CONNECTING}, {address=campusconnect-shard-00-00.d2vm8.mongodb.net:27017, type=UNKNOWN, state=CONNECTING}]. 
12:43:54.134 [cluster-ClusterId{value='67a704314f1c8a53da48dabc', description='CampusConnect'}-campusconnect-shard-00-00.d2vm8.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=campusconnect-shard-00-00.d2vm8.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=306220300, setName='atlas-z84o76-shard-0', canonicalAddress=campusconnect-shard-00-00.d2vm8.mongodb.net:27017, hosts=[campusconnect-shard-00-00.d2vm8.mongodb.net:27017, campusconnect-shard-00-01.d2vm8.mongodb.net:27017, campusconnect-shard-00-02.d2vm8.mongodb.net:27017], passives=[], arbiters=[], primary='campusconnect-shard-00-01.d2vm8.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='aps1-az1'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTH_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=226, topologyVersion=TopologyVersion{processId=67a0cc1f021fd66dfc94a303, counter=5}, lastWriteDate=Sat Feb 08 12:44:07 IST 2025, lastUpdateTimeNanos=10561926411100} 
12:43:54.134 [cluster-ClusterId{value='67a704314f1c8a53da48dabc', description='CampusConnect'}-campusconnect-shard-00-01.d2vm8.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=campusconnect-shard-00-01.d2vm8.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=306236400, setName='atlas-z84o76-shard-0', canonicalAddress=campusconnect-shard-00-01.d2vm8.mongodb.net:27017, hosts=[campusconnect-shard-00-00.d2vm8.mongodb.net:27017, campusconnect-shard-00-01.d2vm8.mongodb.net:27017, campusconnect-shard-00-02.d2vm8.mongodb.net:27017], passives=[], arbiters=[], primary='campusconnect-shard-00-01.d2vm8.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='aps1-az3'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTH_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff00000000000000c2, setVersion=226, topologyVersion=TopologyVersion{processId=67a0cb31d51fad5b42c93544, counter=9}, lastWriteDate=Sat Feb 08 12:44:07 IST 2025, lastUpdateTimeNanos=10561926411200} 
12:43:54.134 [cluster-ClusterId{value='67a704314f1c8a53da48dabc', description='CampusConnect'}-campusconnect-shard-00-02.d2vm8.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=campusconnect-shard-00-02.d2vm8.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=309970100, setName='atlas-z84o76-shard-0', canonicalAddress=campusconnect-shard-00-02.d2vm8.mongodb.net:27017, hosts=[campusconnect-shard-00-00.d2vm8.mongodb.net:27017, campusconnect-shard-00-01.d2vm8.mongodb.net:27017, campusconnect-shard-00-02.d2vm8.mongodb.net:27017], passives=[], arbiters=[], primary='campusconnect-shard-00-01.d2vm8.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='aps1-az2'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTH_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=226, topologyVersion=TopologyVersion{processId=67a0cd6d22e8531d857b0502, counter=5}, lastWriteDate=Sat Feb 08 12:44:07 IST 2025, lastUpdateTimeNanos=10561926411100} 
12:43:54.135 [cluster-ClusterId{value='67a704314f1c8a53da48dabc', description='CampusConnect'}-campusconnect-shard-00-01.d2vm8.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Discovered replica set primary campusconnect-shard-00-01.d2vm8.mongodb.net:27017 with max election id 7fffffff00000000000000c2 and max set version 226 
12:43:55.296 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService 
12:43:55.959 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"] 
12:43:55.976 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/' 
12:43:55.981 [main] INFO  c.c.C.CampusConnectApplication - Started CampusConnectApplication in 4.62 seconds (process running for 5.132) 
12:43:58.943 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet' 
12:43:58.943 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet' 
12:43:58.943 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms 
