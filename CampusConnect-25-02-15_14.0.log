14:33:26.501 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final 
14:33:26.585 [main] INFO  c.c.C.CampusConnectApplication - Starting CampusConnectApplication using Java 21.0.5 with PID 14832 (D:\CampusConnect\target\classes started by Himasnhu Golani in D:\CampusConnect) 
14:33:26.586 [main] DEBUG c.c.C.CampusConnectApplication - Running with Spring Boot v3.3.4, Spring v6.1.13 
14:33:26.586 [main] INFO  c.c.C.CampusConnectApplication - No active profile set, falling back to 1 default profile: "default" 
14:33:27.460 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode 
14:33:27.460 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode. 
14:33:27.626 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 157 ms. Found 9 MongoDB repository interfaces. 
14:33:27.646 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode 
14:33:27.648 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode. 
14:33:27.668 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.campusconnect.CampusConnect.repositories.ChatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository 
14:33:27.669 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.campusconnect.CampusConnect.repositories.CompanyRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository 
14:33:27.669 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.campusconnect.CampusConnect.repositories.ConfigCampusConnectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository 
14:33:27.669 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.campusconnect.CampusConnect.repositories.FileRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository 
14:33:27.669 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.campusconnect.CampusConnect.repositories.FolderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository 
14:33:27.669 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.campusconnect.CampusConnect.repositories.MessageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository 
14:33:27.669 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.campusconnect.CampusConnect.repositories.PostRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository 
14:33:27.669 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.campusconnect.CampusConnect.repositories.UniversityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository 
14:33:27.669 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.campusconnect.CampusConnect.repositories.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository 
14:33:27.669 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces. 
14:33:28.365 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http) 
14:33:28.375 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"] 
14:33:28.377 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat] 
14:33:28.377 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.30] 
14:33:28.448 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext 
14:33:28.448 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1815 ms 
14:33:28.749 [main] INFO  org.mongodb.driver.client - MongoClient with metadata {"application": {"name": "CampusConnect"}, "driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/21.0.5+9-LTS-239"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=majority, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='campusconnectteamcommon', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@2e4eda17, com.mongodb.Jep395RecordCodecProvider@7b5021d1, com.mongodb.KotlinCodecProvider@6befbb12]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=campusconnect.d2vm8.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-z84o76-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='CampusConnect', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null} 
14:33:28.762 [cluster-ClusterId{value='67b0586087e8fc54c081c1cd', description='CampusConnect'}-srv-campusconnect.d2vm8.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server campusconnect-shard-00-01.d2vm8.mongodb.net:27017 to client view of cluster 
14:33:28.790 [cluster-ClusterId{value='67b0586087e8fc54c081c1cd', description='CampusConnect'}-srv-campusconnect.d2vm8.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server campusconnect-shard-00-02.d2vm8.mongodb.net:27017 to client view of cluster 
14:33:28.792 [cluster-ClusterId{value='67b0586087e8fc54c081c1cd', description='CampusConnect'}-srv-campusconnect.d2vm8.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server campusconnect-shard-00-00.d2vm8.mongodb.net:27017 to client view of cluster 
14:33:29.197 [main] INFO  org.mongodb.driver.cluster - Waiting for server to become available for operation with ID 1. Remaining time: 30000 ms. Selector: WritableServerSelector, topology description: {type=REPLICA_SET, servers=[{address=campusconnect-shard-00-01.d2vm8.mongodb.net:27017, type=UNKNOWN, state=CONNECTING}, {address=campusconnect-shard-00-02.d2vm8.mongodb.net:27017, type=UNKNOWN, state=CONNECTING}, {address=campusconnect-shard-00-00.d2vm8.mongodb.net:27017, type=UNKNOWN, state=CONNECTING}]. 
14:33:30.579 [cluster-ClusterId{value='67b0586087e8fc54c081c1cd', description='CampusConnect'}-campusconnect-shard-00-01.d2vm8.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=campusconnect-shard-00-01.d2vm8.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=321291500, setName='atlas-z84o76-shard-0', canonicalAddress=campusconnect-shard-00-01.d2vm8.mongodb.net:27017, hosts=[campusconnect-shard-00-00.d2vm8.mongodb.net:27017, campusconnect-shard-00-01.d2vm8.mongodb.net:27017, campusconnect-shard-00-02.d2vm8.mongodb.net:27017], passives=[], arbiters=[], primary='campusconnect-shard-00-02.d2vm8.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='aps1-az3'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTH_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=229, topologyVersion=TopologyVersion{processId=67b04f187d7b1f6a87271f1d, counter=5}, lastWriteDate=Sat Feb 15 14:33:49 IST 2025, lastUpdateTimeNanos=4429373077500} 
14:33:30.674 [cluster-ClusterId{value='67b0586087e8fc54c081c1cd', description='CampusConnect'}-campusconnect-shard-00-00.d2vm8.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=campusconnect-shard-00-00.d2vm8.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=425361200, setName='atlas-z84o76-shard-0', canonicalAddress=campusconnect-shard-00-00.d2vm8.mongodb.net:27017, hosts=[campusconnect-shard-00-00.d2vm8.mongodb.net:27017, campusconnect-shard-00-01.d2vm8.mongodb.net:27017, campusconnect-shard-00-02.d2vm8.mongodb.net:27017], passives=[], arbiters=[], primary='campusconnect-shard-00-02.d2vm8.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='aps1-az1'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTH_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=229, topologyVersion=TopologyVersion{processId=67b04dffd1b2fb1668538105, counter=5}, lastWriteDate=Sat Feb 15 14:33:49 IST 2025, lastUpdateTimeNanos=4429479869000} 
14:33:30.729 [cluster-ClusterId{value='67b0586087e8fc54c081c1cd', description='CampusConnect'}-campusconnect-shard-00-02.d2vm8.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=campusconnect-shard-00-02.d2vm8.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=469905600, setName='atlas-z84o76-shard-0', canonicalAddress=campusconnect-shard-00-02.d2vm8.mongodb.net:27017, hosts=[campusconnect-shard-00-00.d2vm8.mongodb.net:27017, campusconnect-shard-00-01.d2vm8.mongodb.net:27017, campusconnect-shard-00-02.d2vm8.mongodb.net:27017], passives=[], arbiters=[], primary='campusconnect-shard-00-02.d2vm8.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='aps1-az2'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTH_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff00000000000000c5, setVersion=229, topologyVersion=TopologyVersion{processId=67b04d0040a4160649b0e270, counter=9}, lastWriteDate=Sat Feb 15 14:33:49 IST 2025, lastUpdateTimeNanos=4429524413400} 
14:33:30.729 [cluster-ClusterId{value='67b0586087e8fc54c081c1cd', description='CampusConnect'}-campusconnect-shard-00-02.d2vm8.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Discovered replica set primary campusconnect-shard-00-02.d2vm8.mongodb.net:27017 with max election id 7fffffff00000000000000c5 and max set version 229 
14:33:32.385 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService 
14:33:33.114 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"] 
14:33:33.136 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/' 
14:33:33.142 [main] INFO  c.c.C.CampusConnectApplication - Started CampusConnectApplication in 6.988 seconds (process running for 7.599) 
14:36:27.828 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet' 
14:36:27.828 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet' 
14:36:27.828 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms 
14:36:28.561 [http-nio-8080-exec-2] WARN  c.c.C.service.AuthService - Incorrect password for university with email: vellore@gmail.com 
14:36:39.476 [http-nio-8080-exec-3] INFO  c.c.C.service.AuthService - University logged in successfully: vellore@gmail.com 
14:36:48.819 [http-nio-8080-exec-4] INFO  c.c.C.service.UniversityService - Fetching all companies visiting for university ID: 6767f3642f1dc71c4ec494ae 
14:37:31.774 [http-nio-8080-exec-5] INFO  c.c.C.service.UniversityService - Fetching all companies visiting for university ID: 6767f3642f1dc71c4ec494ae 
14:37:36.025 [http-nio-8080-exec-6] INFO  c.c.C.service.UniversityService - Fetching all companies visiting for university ID: 6767f3642f1dc71c4ec494ae 
14:37:44.697 [http-nio-8080-exec-7] INFO  c.c.C.service.UniversityService - Fetching all companies visiting for university ID: 6767f3642f1dc71c4ec494ae 
14:37:46.684 [http-nio-8080-exec-8] INFO  c.c.C.service.UniversityService - Fetching all companies visiting for university ID: 6767f3642f1dc71c4ec494ae 
14:37:50.143 [http-nio-8080-exec-9] INFO  c.c.C.service.UniversityService - Fetching all companies visiting for university ID: 6767f3642f1dc71c4ec494ae 
14:37:54.345 [http-nio-8080-exec-10] INFO  c.c.C.service.PostService - Fetching posts for university ID: 6767f3642f1dc71c4ec494ae 
14:38:28.051 [http-nio-8080-exec-3] DEBUG c.c.C.service.EmailService - Email sent successfully to: [aditi@gmail.com, himanshu@gmail.com, rahul@gmail.com, rajatpriyadarshan@gmail.com] with type: POST_NOTIFIER 
14:38:28.109 [http-nio-8080-exec-4] INFO  c.c.C.service.PostService - Fetching posts for university ID: 6767f3642f1dc71c4ec494ae 
14:38:34.876 [http-nio-8080-exec-5] INFO  c.c.C.service.UniversityService - Fetching all companies visiting for university ID: 6767f3642f1dc71c4ec494ae 
14:40:46.419 [http-nio-8080-exec-8] INFO  c.c.C.service.UniversityService - Fetching all companies visiting for university ID: 6767f3642f1dc71c4ec494ae 
14:40:49.918 [http-nio-8080-exec-9] ERROR c.c.C.s.CompanyDetailsScrapperService - Failed to fetch Wikipedia details for: Nelsion IQ, URL: https://en.wikipedia.org/wiki/Nelsion IQ 
org.jsoup.HttpStatusException: HTTP error fetching URL. Status=404, URL=[https://en.wikipedia.org/wiki/Nelsion_IQ]
	at org.jsoup.helper.HttpConnection$Response.execute(HttpConnection.java:891)
	at org.jsoup.helper.HttpConnection$Response.execute(HttpConnection.java:888)
	at org.jsoup.helper.HttpConnection$Response.execute(HttpConnection.java:830)
	at org.jsoup.helper.HttpConnection.execute(HttpConnection.java:351)
	at org.jsoup.helper.HttpConnection.get(HttpConnection.java:336)
	at com.campusconnect.CampusConnect.scrapper.CompanyDetailsScrapperService.getCompanyDetailsFromWikipedia(CompanyDetailsScrapperService.java:56)
	at com.campusconnect.CampusConnect.controller.CompanyController.getCompanyDetails(CompanyController.java:34)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:384)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
14:40:51.639 [http-nio-8080-exec-1] INFO  c.c.C.service.UniversityService - Fetching all companies visiting for university ID: 6767f3642f1dc71c4ec494ae 
14:41:03.207 [http-nio-8080-exec-2] INFO  c.c.C.service.UniversityService - Fetching all companies visiting for university ID: 6767f3642f1dc71c4ec494ae 
14:41:06.067 [http-nio-8080-exec-4] INFO  c.c.C.service.UniversityService - Fetching all companies visiting for university ID: 6767f3642f1dc71c4ec494ae 
14:41:08.016 [http-nio-8080-exec-5] WARN  c.c.C.s.CompanyDetailsScrapperService - No infobox found for the company: NIQ 
14:41:09.381 [http-nio-8080-exec-6] INFO  c.c.C.service.UniversityService - Fetching all companies visiting for university ID: 6767f3642f1dc71c4ec494ae 
14:41:13.018 [http-nio-8080-exec-7] INFO  c.c.C.service.PostService - Fetching posts for university ID: 6767f3642f1dc71c4ec494ae 
14:41:15.846 [http-nio-8080-exec-9] INFO  c.c.C.service.UniversityService - Fetching all companies visiting for university ID: 6767f3642f1dc71c4ec494ae 
14:41:27.882 [http-nio-8080-exec-1] INFO  c.c.C.service.UniversityService - Fetching all companies visiting for university ID: 6767f3642f1dc71c4ec494ae 
14:41:48.512 [http-nio-8080-exec-2] INFO  c.c.C.service.UniversityService - Creating company for university ID: 6767f3642f1dc71c4ec494ae with company name: Accenture 
14:41:48.910 [http-nio-8080-exec-2] INFO  c.c.C.service.UniversityService - Company created successfully for university ID: 6767f3642f1dc71c4ec494ae 
14:42:00.375 [http-nio-8080-exec-3] INFO  c.c.C.service.UniversityService - Fetching all companies visiting for university ID: 6767f3642f1dc71c4ec494ae 
14:42:59.635 [http-nio-8080-exec-8] INFO  c.c.C.service.UniversityService - Fetching profile for university ID: 6767f3642f1dc71c4ec494ae 
14:43:01.038 [http-nio-8080-exec-7] INFO  c.c.C.service.UniversityService - Fetching all students for university ID: 6767f3642f1dc71c4ec494ae 
