20:26:55.526 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final 
20:26:55.610 [main] INFO  c.c.C.CampusConnectApplication - Starting CampusConnectApplication using Java 21.0.5 with PID 2148 (D:\CampusConnect\target\classes started by Himasnhu Golani in D:\CampusConnect) 
20:26:55.610 [main] DEBUG c.c.C.CampusConnectApplication - Running with Spring Boot v3.3.4, Spring v6.1.13 
20:26:55.611 [main] INFO  c.c.C.CampusConnectApplication - No active profile set, falling back to 1 default profile: "default" 
20:26:56.440 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode 
20:26:56.440 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode. 
20:26:56.605 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 160 ms. Found 9 MongoDB repository interfaces. 
20:26:56.622 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode 
20:26:56.622 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode. 
20:26:56.639 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.campusconnect.CampusConnect.repositories.ChatRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository 
20:26:56.639 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.campusconnect.CampusConnect.repositories.CompanyRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository 
20:26:56.639 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.campusconnect.CampusConnect.repositories.ConfigCampusConnectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository 
20:26:56.639 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.campusconnect.CampusConnect.repositories.FileRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository 
20:26:56.639 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.campusconnect.CampusConnect.repositories.FolderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository 
20:26:56.639 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.campusconnect.CampusConnect.repositories.MessageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository 
20:26:56.639 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.campusconnect.CampusConnect.repositories.PostRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository 
20:26:56.639 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.campusconnect.CampusConnect.repositories.UniversityRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository 
20:26:56.639 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.campusconnect.CampusConnect.repositories.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository 
20:26:56.639 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces. 
20:26:57.344 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http) 
20:26:57.361 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"] 
20:26:57.364 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat] 
20:26:57.364 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.30] 
20:26:57.431 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext 
20:26:57.431 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1778 ms 
20:26:57.729 [main] INFO  org.mongodb.driver.client - MongoClient with metadata {"application": {"name": "CampusConnect"}, "driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.0.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/21.0.5+9-LTS-239"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=majority, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='campusconnectteamcommon', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@49b89425, com.mongodb.Jep395RecordCodecProvider@59328218, com.mongodb.KotlinCodecProvider@5345dfe8]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=campusconnect.d2vm8.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-z84o76-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='CampusConnect', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null} 
20:26:57.872 [cluster-ClusterId{value='67b9e5b93498e664b5328b3b', description='CampusConnect'}-srv-campusconnect.d2vm8.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server campusconnect-shard-00-01.d2vm8.mongodb.net:27017 to client view of cluster 
20:26:57.913 [cluster-ClusterId{value='67b9e5b93498e664b5328b3b', description='CampusConnect'}-srv-campusconnect.d2vm8.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server campusconnect-shard-00-02.d2vm8.mongodb.net:27017 to client view of cluster 
20:26:57.916 [cluster-ClusterId{value='67b9e5b93498e664b5328b3b', description='CampusConnect'}-srv-campusconnect.d2vm8.mongodb.net] INFO  org.mongodb.driver.cluster - Adding discovered server campusconnect-shard-00-00.d2vm8.mongodb.net:27017 to client view of cluster 
20:26:58.240 [main] INFO  org.mongodb.driver.cluster - Waiting for server to become available for operation with ID 7. Remaining time: 30000 ms. Selector: WritableServerSelector, topology description: {type=REPLICA_SET, servers=[{address=campusconnect-shard-00-01.d2vm8.mongodb.net:27017, type=UNKNOWN, state=CONNECTING}, {address=campusconnect-shard-00-02.d2vm8.mongodb.net:27017, type=UNKNOWN, state=CONNECTING}, {address=campusconnect-shard-00-00.d2vm8.mongodb.net:27017, type=UNKNOWN, state=CONNECTING}]. 
20:26:58.518 [cluster-ClusterId{value='67b9e5b93498e664b5328b3b', description='CampusConnect'}-campusconnect-shard-00-02.d2vm8.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=campusconnect-shard-00-02.d2vm8.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=303193000, setName='atlas-z84o76-shard-0', canonicalAddress=campusconnect-shard-00-02.d2vm8.mongodb.net:27017, hosts=[campusconnect-shard-00-00.d2vm8.mongodb.net:27017, campusconnect-shard-00-01.d2vm8.mongodb.net:27017, campusconnect-shard-00-02.d2vm8.mongodb.net:27017], passives=[], arbiters=[], primary='campusconnect-shard-00-02.d2vm8.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='aps1-az2'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTH_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff00000000000000c9, setVersion=235, topologyVersion=TopologyVersion{processId=67b4525f28bc341370fbd9b8, counter=9}, lastWriteDate=Sat Feb 22 20:27:21 IST 2025, lastUpdateTimeNanos=1915310360500} 
20:26:58.518 [cluster-ClusterId{value='67b9e5b93498e664b5328b3b', description='CampusConnect'}-campusconnect-shard-00-00.d2vm8.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=campusconnect-shard-00-00.d2vm8.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=300104200, setName='atlas-z84o76-shard-0', canonicalAddress=campusconnect-shard-00-00.d2vm8.mongodb.net:27017, hosts=[campusconnect-shard-00-00.d2vm8.mongodb.net:27017, campusconnect-shard-00-01.d2vm8.mongodb.net:27017, campusconnect-shard-00-02.d2vm8.mongodb.net:27017], passives=[], arbiters=[], primary='campusconnect-shard-00-02.d2vm8.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='aps1-az1'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTH_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=235, topologyVersion=TopologyVersion{processId=67b4535634d2d2fe4e283540, counter=5}, lastWriteDate=Sat Feb 22 20:27:21 IST 2025, lastUpdateTimeNanos=1915310413500} 
20:26:58.518 [cluster-ClusterId{value='67b9e5b93498e664b5328b3b', description='CampusConnect'}-campusconnect-shard-00-01.d2vm8.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=campusconnect-shard-00-01.d2vm8.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=305973900, setName='atlas-z84o76-shard-0', canonicalAddress=campusconnect-shard-00-01.d2vm8.mongodb.net:27017, hosts=[campusconnect-shard-00-00.d2vm8.mongodb.net:27017, campusconnect-shard-00-01.d2vm8.mongodb.net:27017, campusconnect-shard-00-02.d2vm8.mongodb.net:27017], passives=[], arbiters=[], primary='campusconnect-shard-00-02.d2vm8.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='aps1-az3'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTH_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=235, topologyVersion=TopologyVersion{processId=67b454a3163af876acd3bbc4, counter=5}, lastWriteDate=Sat Feb 22 20:27:21 IST 2025, lastUpdateTimeNanos=1915310316000} 
20:26:58.518 [cluster-ClusterId{value='67b9e5b93498e664b5328b3b', description='CampusConnect'}-campusconnect-shard-00-02.d2vm8.mongodb.net:27017] INFO  org.mongodb.driver.cluster - Discovered replica set primary campusconnect-shard-00-02.d2vm8.mongodb.net:27017 with max election id 7fffffff00000000000000c9 and max set version 235 
20:26:59.888 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name authService 
20:27:00.517 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"] 
20:27:00.531 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/' 
20:27:00.539 [main] INFO  c.c.C.CampusConnectApplication - Started CampusConnectApplication in 5.369 seconds (process running for 5.96) 
